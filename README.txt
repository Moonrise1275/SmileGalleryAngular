Smile Gallery ver.Angular 안내서

1. 스택
  AngularJS, Firebase, Imgur 를 사용했습니다.
  Imgur의 경우 의존성이 낮아 쉽게 교체 가능합니다.

  1-1. AngularJS
    자바스크립트 프레임워크입니다.

  1-2. Firebase
    BaaS(Backend as a Service) 입니다. JSON 형태의 NoSQL DB를 제공하고, 모든 클라이언트 간의 데이터를 동기화시켜 주는 서비스를 제공합니다.
    모든 동기화는 실시간으로 이루어집니다.

  1-3. Imgur
    간단한 이미지 호스팅 서비스입니다.
    개인 사용자에겐 무료입니다.

2. 흐름
  제가 알고 있는 스마일갤러리의 기능 대부분을 구현했습니다.
  핵심 포인트는 실시간입니다. 표시되는 모든 정보는 항상 최신 상태를 유지합니다.

  1-1. 폴리오 목록
    URL : /folio
    등록된 모든 폴리오를 보여줍니다.
    폴리오의 작성자, 제목, 내 좋아요 여부, 좋아요 개수, 폴리오의 첫번째 사진을 볼 수 있습니다.
    폴리오 패널을 클릭하면 폴리오 상세 페이지로 갑니다.
    별을 클릭하면 좋아요/취소 를 할 수 있습니다.
    내 폴리오일 경우 별 대신 쓰레기통 표시가 나타납니다. 클릭하면 폴리오가 삭제됩니다.
    New folio 패널을 누르면 새로운 폴리오가 만들어지고, 해당 폴리오의 상세 페이지로 갑니다.
    폴리오 목록에 변동이 생기면 모든 사용자의 화면에 즉각적으로 반영됩니다.

  1-2. 폴리오 상세
    URL : /folio/:folioId
    선택한 폴리오의 상세 정보를 보여줍니다.
    폴리오의 제목, 페이지 목록, 작성자 정보, 댓글 목록을 볼 수 있습니다.
    제목의 별을 클릭하여 좋아요/취소 를 할수 있습니다.
    내 폴리오일 경우 제목 대신 제목변경란이 나타나고, 내용 목록 최하단에 페이지추가 란이 나타나며, 각 페이지 옆에 쓰레기통 아이콘이 추가됩니다.
    제목변경란에 작성한 내용은 실시간으로 반영됩니다.
    페이지추가 란에서 이미지 파일을 선택하면 해당 이미지가 Imgur 로 업로드 됩니다.
    페이지추가 란에서 덧붙이기를 누르면 해당 페이지가 페이지 목록의 마지막에 덧붙여집니다.
    쓰레기통 아이콘을 누르면 해당 페이지가 삭제됩니다.
    작가 프로필의 사진이나 닉네임을 눌러 사용자 상세 페이지로 갑니다.
    작가 닉네임 옆의 별을 클릭하여 작가에게 따라가기/취소 를 할수 있습니다.
    댓글달기 버튼을 눌러 댓글을 달 수 있습니다.
    페이지 목록이나 댓글 목록에 변동이 생기면 모든 사용자의 화면에 즉각적으로 반영됩니다.

  1-3. 사용자 상세
    URL : /user/:userId
    선택한 사용자의 상세 정보를 보여줍니다.
    사용자의 별명, 프로필, 사진, 팔로잉/팔로워, 등록한 폴리오 목록을 볼 수 있습니다.
    사용자를 내 따라가기에 추가할 수 있습니다.
    내 정보일 경우 별명/프로필/사진 을 실시간으로 변경할 수 있습니다. 이는 모든 사용자의 화면에 즉각적으로 반영됩니다.




AngularJS 정보

1. 모듈
  자바스크립트는 자체적으로 모듈 시스템을 지원하지 않습니다. 그래서 Angular는 모듈 시스템을 자체적으로 제공합니다.
  모듈을 만들기 위해서는 angular.module('moduleName', ['dependency1','dependency2'])를 호출합니다.
  모듈은 하나 이상의 컴포넌트로 이루어집니다. controller, service, directive 등이 컴포넌트에 해당합니다.
  컴포넌트는 다른 컴포넌트에 의존성을 가질 수 있습니다. 의존성을 선언하기 위해서는 컴포넌트의 생성자에 파라미터로 의존성을 가질 컴포넌트의 이름을 넣으면 됩니다.
  이를 DI(Dependency Injection)라고 합니다.

  1-1. 컨트롤러
    컨트롤러는 DOM 트리의 특정 부분을 제어합니다.
    html의 태그에 ng-controller="myCtrl" 속성이 존재할 경우 해당 태그에 해당하는 DOM 노드의 스코프는 myCtrl 컨트롤러에서 접근할 수 있습니다.

  1-2. 서비스
    서비스는 Angular에서 로직을 담당합니다. 모든 서비스는 싱글톤으로, 여러 컨트롤러/디렉티브에서 하나의 서비스를 호출할 수 있습니다.
    서비스는 주로 factory를 통해 정의됩니다.

  1-3. 디렉티브
    디렉티브는 캡슐화된 DOM 트리의 조각으로, html에 미리 정의된 문서를 삽입할 수 있습니다.
    일반적으로 디렉티브는 템플릿과 컨트롤러로 이루어집니다.
    템플릿은 디렉티브가 가지는 html 레이아웃입니다.
    template 혹은 templateUrl 을 통해 선언할 수 있습니다.
    컨트롤러는 위의 컨트롤러와 같다고 보시면 됩니다.
    템플릿의 'scope', 해당 DOM 노드의 jqLite 'element', html에 선언된 'attributes'에 접근할 수 있습니다.

2. 스코프
  스코프는 HTML 상에 존재하는 변수의 집합입니다.
  DOM 트리의 각 노드는 저마다의 스코프를 가지고 있으며, 하위 스코프에서는 상위 스코프의 변수를 읽거나 호출할 수 있습니다.
  html 상의 Angular 표현식에서 스코프 안의 변수들은 전역변수로 취급됩니다.
  스코프는 컨트롤러에서는 $scope 서비스를 통해, 디렉티브에서는 link 함수의 첫번째 파라미터인 scope를 통해 접근할 수 있습니다.
  또는 $rootScope 서비스를 통해 최상위 스코프에 접근할 수 있습니다.

3. SPA 라우팅
  기본적으로 SPA(Single Page Application)은 하나의 페이지 위에서 여러 템플릿을 동적으로 로딩하는 형식입니다.
  이 앱에서는 index.html 이 해당 페이지로, 사용자는 이 페이지를 벗어나지 않습니다.
  index.html 을 보시면 <ng-view> 태그가 있는데요, 이 부분이 실질적인 라우팅이 일어나는 부분이라고 할 수 있습니다.
  asp.net mvc 기준으로 하자면 index.html 은 레이아웃이라고 할수 있습니다.

  ngRoute 모듈은 라우팅에 HashBang URL을 사용합니다.
  형식은 https://www.example.com/#/client/side/page?param1=foo&par2=baz#hash 와 같습니다.

  URL에 매칭되는 페이지는 $routeProvider 를 통해 조정할 수 있습니다.